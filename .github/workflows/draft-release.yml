name: Draft Release
on:
  push:
    tags:
    - '*.*.*'
    # branches: [ "main" ]
  pull_request:
    # branches: [ "main" ]

jobs:
  create_new_release:
    name: Create new release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - run: echo "Release for tag ${CURRENT_TAG}"
    - uses: actions/checkout@v3
    - name: Create Release
      uses: ncipollo/release-action@v1.14.0
      with:
        draft: true
        tag: ${{ github.ref_name }}

  build_and_upload:
    needs: create_new_release
    strategy:
      matrix:
        configuration: [Release]
        platform: [x64]
    runs-on: windows-latest
    env:
      Solution_Name: MemoGenerator.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=${{ matrix.configuration }} /p:Platform=${{ matrix.platform }}

    - name: Build
      run: msbuild $env:Solution_Name /p:Configuration=${{ matrix.configuration }} /p:Platform=${{ matrix.platform }}

    - name: Upload artifact
    - id: upload-artifact
    - uses: actions/upload-artifact@v4
      with:
        # Name of the artifact to upload.
        # Optional. Default is 'artifact'
        name: MemoGenerator-${{ github.ref_name }}-${{ matrix.platform }}
    
        # A file, directory or wildcard pattern that describes what to upload
        # Required.
        path: MemoGenerator/bin/${{ matrix.platform }}/Release/net6.0-windows10.0.18362.0/win10-${{ matrix.platform }}

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_new_release.outputs.upload_url }}
        asset_path: ${{ steps.upload-artifact.outputs.artifact-url }}
        # asset_name: MemoGenerator-${{ github.ref_name }}.zip
        asset_content_type: application/zip
